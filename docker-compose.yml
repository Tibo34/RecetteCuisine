version: '3.3'

services:
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '9906:3306'
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - my-backend
  nginx:
    container_name: angular_nginx
    build: .docker/nginx
    volumes:
      - ${ANGULAR_APP}/dist/RecetteCuisine:/usr/share/nginx/html
    ports:
      - "81:80"
      - "443:443"

  node:
    build: .docker/node
    container_name: angular_node
    ports:
      - 4200:4200
    volumes:
      - ${ANGULAR_APP}:/home/node/app/frontend
    tty: true
    command:
      - /bin/sh
      - -c
      - |
        cd /home/node/app/frontend && npm start
    expose:
      - "4200"
  tomcat:
    image: tomcat:8.5.35
    container_name: tomcat
    volumes:
      - ./docker/RecetteCuisine.war:/usr/local/tomcat/webapps/RecetteCuisine.war
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:9906/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - mysql
    networks:
      - my-backend

  jenkins:
    build: .docker/jenkins
    restart: always
    hostname: 'jenkins'
    ports:
      - '8081:8080'
      - '50000:50000'
    volumes:
      - 'jenkins_home:/var/jenkins_home'
      - '/var/run/docker.sock:/var/run/docker.sock'
  sonarqube:
    image: 'sonarqube:7.6-community'
    ports:
      - '9000:9000'
    volumes:
      - 'sonarqube_conf:/opt/sonarqube/conf'
      - 'sonarqube_data:/opt/sonarqube/data'
      - 'sonarqube_logs:/opt/sonarqube/logs'
      - 'sonarqube_extensions:/opt/sonarqube/extensions'

volumes:
  db-data:
  jenkins_home:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:

networks:
  my-backend:
    driver: bridge